"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.block = exports.createBlock = void 0;
const blocks_model_1 = require("./blocks.model");
const util_1 = require("../util");
const blocks_line_1 = require("./blocks.line");
const blocks_row_line_1 = require("./blocks.row-line");
const blocks_header_1 = require("./blocks.header");
const blocks_mid_1 = require("./blocks.mid");
const blocks_footer_1 = require("./blocks.footer");
const blocks_table_1 = require("./blocks.table");
const blocks_json_1 = require("./blocks.json");
const blocks_settings_1 = require("./blocks.settings");
const blocks_line_message_1 = require("./blocks.line-message");
const createBlock = (blockType, content, settings = {}) => __awaiter(void 0, void 0, void 0, function* () {
    let lines = [];
    switch (blockType) {
        // case BlockType.COUNTER:
        //   BLOCK_COUNTER(content, settings);
        //   break;
        // case BlockType.LOADER:
        //   BLOCK_COUNTER(content, settings);
        //   break;
        case blocks_model_1.BlockType.LINE:
            lines = (0, blocks_line_1.createBlockLine)(content, settings);
            break;
        case blocks_model_1.BlockType.ROW_LINE:
            lines = (0, blocks_row_line_1.createBlockRowLine)(content, settings);
            break;
        case blocks_model_1.BlockType.LINE_SUCCESS:
            lines = (0, blocks_line_message_1.createBlockLineSuccess)(content, settings);
            break;
        case blocks_model_1.BlockType.LINE_ERROR:
            lines = (0, blocks_line_message_1.createBlockLineError)(content, settings);
            break;
        case blocks_model_1.BlockType.LINE_WARNING:
            lines = (0, blocks_line_message_1.createBlockLineWarning)(content, settings);
            break;
        case blocks_model_1.BlockType.START:
            lines = (0, blocks_header_1.createBlockHeader)(content, settings);
            break;
        case blocks_model_1.BlockType.END:
            lines = (0, blocks_footer_1.createBlockFooter)(content, settings);
            break;
        case blocks_model_1.BlockType.MID:
            lines = (0, blocks_mid_1.createBlockMid)(content, settings);
            break;
        case blocks_model_1.BlockType.TABLE:
            lines = yield (0, blocks_table_1.createBlockTable)(content, settings);
            break;
        case blocks_model_1.BlockType.JSON:
            lines = yield (0, blocks_json_1.createBlockJson)(content, settings);
            break;
        case blocks_model_1.BlockType.SETTINGS:
            lines = yield (0, blocks_settings_1.createBlockSettings)(content, settings);
            break;
        case blocks_model_1.BlockType.WARNINGS:
            lines = (0, blocks_line_message_1.createBlockWarnings)(content, settings);
            break;
        case blocks_model_1.BlockType.ERRORS:
            lines = (0, blocks_line_message_1.createBlockErrors)(content, settings);
            break;
    }
    return lines;
});
exports.createBlock = createBlock;
const block = (blockType, content, settings = {}) => __awaiter(void 0, void 0, void 0, function* () {
    const lines = yield (0, exports.createBlock)(blockType, content, settings);
    lines.forEach((line) => (0, util_1.logger)(line, settings));
});
exports.block = block;
//# sourceMappingURL=blocks.js.map