"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.border = void 0;
const settings_1 = require("../settings");
const styles = __importStar(require("../util"));
const borderCharacters = {
    single: {
        startLine: "━",
        endLine: "━",
        midLine: "─",
        midBreakTop: "┬",
        midBreakBottom: "┴",
        side: "┃",
        topStart: "┏",
        topEnd: "┓",
        bottomStart: "┗",
        bottomEnd: "┛",
        midStart: "┠",
        midEnd: "┨",
    },
    double: {
        startLine: "═",
        endLine: "═",
        midLine: "─",
        midBreakTop: "┬",
        midBreakBottom: "┴",
        side: "║",
        topStart: "╔",
        topEnd: "╗",
        bottomStart: "╚",
        bottomEnd: "╝",
        midStart: "╟",
        midEnd: "╢",
    },
    fat: {
        startLine: "▘",
        endLine: "▗",
        midLine: "▄",
        midBreakTop: "┬",
        midBreakBottom: "┴",
        side: "▞",
        topStart: "▛",
        topEnd: "▜",
        bottomStart: "▙",
        bottomEnd: "▟",
        midStart: "▄",
        midEnd: "▄",
    },
};
const border = (type, settings = {}) => {
    const cfg = (0, settings_1.useSettings)(settings);
    let char = borderCharacters[cfg.borderType][type] || "";
    if (styles[cfg.borderColor])
        char = styles[cfg.borderColor](char);
    return char;
};
exports.border = border;
//# sourceMappingURL=border.js.map