import * as blocks from "./blocks";
export declare const BLOCK: (blockType: blocks.BlockType, content: any, settings?: Partial<import("./types").LoggerSettings>) => Promise<void>;
export declare const START: (msg: string, settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK: (blockType: blocks.BlockType, content: any, settings?: Partial<import("./types").LoggerSettings>) => Promise<string[]>;
export declare const BLOCK_COUNTER: (args?: import("./types").CounterOptions, settings?: Partial<import("./types").LoggerSettings>) => Promise<void>;
export declare const BLOCK_LOADER: (blockType: blocks.BlockType, content: any, settings?: Partial<import("./types").LoggerSettings>) => Promise<void>;
export declare const BLOCK_END: (txt?: any, settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_END: (txt?: string, settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_START: (txt?: string, settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_START: (txt?: string, settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_FOOTER: (txt?: any, settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_FOOTER: (txt?: string, settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_LINE_SUCCESS: (msg: string, settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_LINE_SUCCESS: (msg: string | string[], settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_LINE_WARNING: (msg: string, settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_LINE_WARNING: (msg: string | string[], settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_LINE_ERROR: (msg: string, settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_LINE_ERROR: (msg: string | string[], settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_WARNINGS: (msg: string[], settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const BLOCK_ERRORS: (msg: string[], settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const BLOCK_JSON: (obj: Object, settings?: Partial<import("./types").LoggerSettings>) => Promise<void>;
export declare const CREATE_BLOCK_JSON: (obj: Object, settings?: Partial<import("./types").LoggerSettings>) => Promise<string[]>;
export declare const BLOCK_LINE: (msg?: string | string[], settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_LINE: (msg?: string | string[], settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_ROW_LINE: (arr: any[], settings?: Partial<import("./types").LoggerSettings>) => void;
export declare const CREATE_BLOCK_ROW_LINE: (arr: any[], settings?: Partial<import("./types").LoggerSettings>) => string[];
export declare const BLOCK_SETTINGS: (obj: any, settings?: Partial<import("./types").LoggerSettings>, config?: import("./types").SettingsConfig) => Promise<void>;
export declare const CREATE_BLOCK_SETTINGS: (obj: any, settings?: Partial<import("./types").LoggerSettings>, config?: import("./types").SettingsConfig) => Promise<string[]>;
export declare const BLOCK_TABLE: (table: any[], settings?: Partial<import("./types").LoggerSettings>, config?: import("./types").SettingsConfig) => Promise<void>;
export declare const CREATE_BLOCK_TABLE: (table: any[], settings?: Partial<import("./types").LoggerSettings>, config?: import("./types").SettingsConfig) => Promise<string[]>;
