"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCmykObject = exports.toRgbObject = exports.toHsvObject = exports.toHslObject = void 0;
const convert_1 = require("./convert");
const is_1 = require("./is");
const helpers_1 = require("./helpers");
const to_1 = require("./to");
const toHslObject = (input) => {
    if (typeof input !== "string")
        return (0, to_1.toHSL)(input);
    if (!(0, is_1.isHSL)(input) && !(0, is_1.isHSLA)(input))
        return convert_1.defaultValues.hsl;
    const values = (0, helpers_1.getNumbers)(input);
    let alpha = values[3] || null;
    return alpha
        ? {
            h: values[0],
            s: values[1],
            l: values[2],
            a: alpha,
        }
        : {
            h: values[0],
            s: values[1],
            l: values[2],
        };
};
exports.toHslObject = toHslObject;
const toHsvObject = (input) => {
    if (typeof input !== "string")
        return (0, to_1.toHSV)(input);
    if (!(0, is_1.isHSL)(input) && !(0, is_1.isHSLA)(input))
        return convert_1.defaultValues.hsv;
    const values = (0, helpers_1.getNumbers)(input);
    let alpha = values[3] || null;
    return alpha
        ? {
            h: values[0],
            s: values[1],
            v: values[2],
            a: alpha,
        }
        : {
            h: values[0],
            s: values[1],
            v: values[2],
        };
};
exports.toHsvObject = toHsvObject;
const toRgbObject = (input) => {
    if (typeof input !== "string")
        return (0, to_1.toRGB)(input);
    if (!(0, is_1.isRGB)(input) && !(0, is_1.isRGBA)(input))
        return convert_1.defaultValues.rgb;
    const values = (0, helpers_1.getNumbers)(input);
    let alpha = values[3] || null;
    return alpha
        ? {
            r: values[0],
            g: values[1],
            b: values[2],
            a: alpha,
        }
        : {
            r: values[0],
            g: values[1],
            b: values[2],
        };
};
exports.toRgbObject = toRgbObject;
const toCmykObject = (input) => {
    if (typeof input !== "string")
        return (0, to_1.toCMYK)(input);
    if (!(0, is_1.isCMYK)(input))
        return convert_1.defaultValues.cmyk;
    const values = (0, helpers_1.getNumbers)(input);
    return {
        c: values[0],
        m: values[1],
        y: values[2],
        k: values[3],
    };
};
exports.toCmykObject = toCmykObject;
//# sourceMappingURL=object.js.map