"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.randomBetween = exports.shift = exports.areBetween = exports.isBetween = exports.minmax = exports.rgbToY = exports.getNumbers = void 0;
const getNumbers = (input) => {
    const values = [];
    input
        .replace(/[^\d,]/g, "")
        .split(",")
        .forEach((v) => values.push(parseInt(v)));
    return values;
};
exports.getNumbers = getNumbers;
const sRGBtoLin = (colorChannel) => {
    if (colorChannel <= 0.04045) {
        return colorChannel / 12.92;
    }
    return Math.pow((colorChannel + 0.055) / 1.055, 2.4);
};
const rgbToY = (input) => {
    const { r, g, b } = input;
    return 0.2126 * sRGBtoLin(r) + 0.7152 * sRGBtoLin(g) + 0.0722 * sRGBtoLin(b);
};
exports.rgbToY = rgbToY;
function YtoLstar(Y) {
    if (Y <= 216 / 24389) {
        return Y * (24389 / 27);
    }
    return Math.pow(Y, 1 / 3) * 116 - 16;
}
const isDefined = (value) => typeof value !== undefined;
const minmax = (num, min = 0, max = 100) => Math.min(Math.max(num, min), max);
exports.minmax = minmax;
const isBetween = (val, min, max) => val >= min && val <= max;
exports.isBetween = isBetween;
const areBetween = (vals, min, max) => !vals.find((v) => !(0, exports.isBetween)(v, min, max));
exports.areBetween = areBetween;
const shift = (value) => {
    value.shift();
    return isDefined(value) ? value : [];
};
exports.shift = shift;
const randomBetween = (min, max) => {
    if (min == max)
        return min;
    return Math.floor(Math.random() * (max - min + 1) + min);
};
exports.randomBetween = randomBetween;
//# sourceMappingURL=helpers.js.map