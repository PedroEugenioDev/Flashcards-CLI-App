{"version":3,"sources":["../src/lib/default/array.ts","../src/lib/default/async.ts","../src/lib/default/number.ts","../src/lib/default/strings.ts","../src/lib/default/style.ts","../src/lib/system/file.ts","../src/lib/system/path.ts","../src/lib/system/fs.ts","../src/lib/color/convert.ts","../src/lib/color/mix.ts"],"sourcesContent":["export const repeat = (\n  num: number = 1,\n  value: any,\n  toString = false\n): any[] | string => {\n  let values = [];\n  for (let i = 0; i < num; i++) {\n    values.push(value);\n  }\n  if (toString) return values.join(\"\");\n  else return values;\n};\n","export async function asyncForEach<T>(\n  array: Array<T>,\n  callback: (item: T, index: number, og: T[]) => void\n): Promise<void> {\n  for (let index = 0; index < array.length; index++) {\n    await callback(array[index], index, array);\n  }\n}\n\nexport const hello = async (args: unknown = {}): Promise<unknown> => {\n  return args;\n};\n\nexport const promisify = async (func: any) => {\n  await Promise.resolve(func).then(function () {\n    return;\n  });\n};\n\nexport const asyncFilter = async (arr: any[], predicate: any) => {\n  const results = await Promise.all(arr.map(predicate));\n  return arr.filter((_v, index) => results[index]);\n};\nexport const asyncSome = async (arr: any[], predicate: any) =>\n  (await asyncFilter(arr, predicate)).length > 0;\nexport const asyncEvery = async (arr: any[], predicate: any) =>\n  (await asyncFilter(arr, predicate)).length === arr.length;\n","export const toRoundNumber = (num: number, decimalPlaces: number = 2) => {\n  return Number(\n    Math.round(parseFloat(num + \"e\" + decimalPlaces)) + \"e-\" + decimalPlaces\n  ).toFixed(decimalPlaces);\n};\n","export const removeTag = (input: string, tag: string): string => {\n  const regex = new RegExp(`<${tag}(.*)>(.*)<\\/${tag}>`, \"gi\");\n  return input.replace(regex, \"\");\n};\n\nexport const getStringFromTag = (input: string, tag: string): string => {\n  const regex = new RegExp(`<${tag}(.*?)>(.+?)<\\/${tag}>`, \"gi\");\n  const matches = regex.exec(input);\n  return matches && matches.length > 1 ? matches[2] : \"\";\n};\n\nexport const getIndexes = (source: string, find: string): number[] => {\n  const result = [];\n  let i = 0;\n\n  while (i < source.length) {\n    if (source.substring(i, i + find.length) === find) {\n      result.push(i);\n      i += find.length;\n    } else {\n      i++;\n    }\n  }\n\n  return result;\n};\n\nexport const nthIndex = (source: string, find: string, nth: number): number => {\n  const result = getIndexes(source, find);\n  return result[nth];\n};\n","export class Style {\n  block: string = \"\";\n\n  constructor(block: string) {\n    this.block = block;\n  }\n  bem(element: string = \"\", modifier: string = \"\") {\n    if (this.block == \"\") {\n      return ``;\n    }\n    return `${this.block}${element ? `__${element}` : ``}${\n      modifier ? `--${modifier}` : ``\n    }`;\n  }\n}\n","import { existsSync } from \"fs\";\nimport { dirname } from \"path\";\nimport { asyncEvery, asyncForEach, asyncSome } from \"../default/async\";\nconst { mkdir, readFile, access, writeFile, R_OK, F_OK, W_OK } =\n  require(\"fs\").promises;\n\nexport const createDir = async (dir: string): Promise<void> => {\n  try {\n    !existsSync(dir) && (await mkdir(dir, { recursive: true }));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getFileData = async (filePath: string): Promise<string> => {\n  try {\n    const file = await readFile(filePath).then((res: any) => res.toString());\n    return filePath.includes(\".json\") ? JSON.parse(file) : file;\n  } catch (err: any) {\n    throw Error(err);\n  }\n};\n\nexport const getJsonData = async (filePath: string): Promise<{}> => {\n  const data = await getFileData(filePath);\n  return JSON.parse(data);\n};\n\nexport const fileExists = async (path: string): Promise<boolean> => {\n  try {\n    await access(path, R_OK | W_OK | F_OK);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nexport const filesExist = async (\n  paths: string[],\n  some = false\n): Promise<boolean> => {\n  const action = some ? asyncSome : asyncEvery;\n\n  try {\n    const result = await action(\n      paths,\n      async (file: string) => await fileExists(file)\n    );\n    return result;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const existingFiles = async (paths: string[]): Promise<string[]> => {\n  const existingPaths: string[] = [];\n  await asyncForEach(paths, async (path) => {\n    const exists = await fileExists(path);\n    if (exists) existingPaths.push(path);\n  });\n  return existingPaths;\n};\n\nexport const createFile = async (dest: string, data: string): Promise<void> => {\n  await mkdir(dirname(dest), { recursive: true });\n  await writeFile(dest, data);\n};\n","export const parentPath = (path: string, goBack = -1): string =>\n  path.split(\"/\").slice(0, goBack).join(\"/\");\n\nexport const renamePath = (ogLink: string, rename: string) => {\n  const pathGroup = ogLink.split(\"/\");\n  pathGroup[pathGroup.length - 2] = rename;\n  return pathGroup.join(\"/\").toLowerCase();\n};\n","const { mkdir, readFile, access, writeFile, createWriteStream, existsSync } =\n  require(\"fs\").promises;\n\nexport { mkdir, readFile, access, writeFile, createWriteStream, existsSync };\n","import { Hex, HSL, RGB } from \"./color.model\";\n\nexport const hexToRgb = (hex: string): RGB => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        red: parseInt(result[1], 16),\n        green: parseInt(result[2], 16),\n        blue: parseInt(result[3], 16),\n      }\n    : {\n        red: 0,\n        green: 0,\n        blue: 0,\n      };\n};\n\nexport const componentToHex = (c: number): Hex => {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n};\n\nexport const rgbToHex = (rgb: RGB): Hex => {\n  const cth = componentToHex;\n  return `#${cth(rgb.red)}${cth(rgb.green)}${cth(rgb.blue)}`;\n};\n\nexport const hexToHsl = (hex: Hex): HSL => {\n  return rgbToHsl(hexToRgb(hex));\n};\n\nexport const RgbToLuminance = (rgb: RGB): number => {\n  return 0.299 * rgb.red + 0.587 * rgb.green + 0.114 * rgb.blue;\n};\nexport const HexToLuminance = (hex: Hex): number =>\n  RgbToLuminance(hexToRgb(hex));\n\nexport const hslToHex = (hsl: HSL): Hex => {\n  hsl.lightness /= 100;\n  const a = (hsl.saturation * Math.min(hsl.lightness, 1 - hsl.lightness)) / 100;\n  const f = (n: number) => {\n    const k = (n + hsl.hue / 30) % 12;\n    const color = hsl.lightness - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color)\n      .toString(16)\n      .padStart(2, \"0\");\n  };\n  return `#${f(0)}${f(8)}${f(4)}`;\n};\n\nexport const rgbToHsl = (rgb: RGB): HSL => {\n  (rgb.red /= 255), (rgb.green /= 255), (rgb.blue /= 255);\n  const max = Math.max(rgb.red, rgb.green, rgb.blue);\n  const min = Math.min(rgb.red, rgb.green, rgb.blue);\n\n  let hue;\n  let sat;\n  let light = (max + min) / 2;\n\n  if (max == min) {\n    hue = sat = 0; // achromatic\n  } else {\n    var d = max - min;\n    sat = light > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case rgb.red:\n        hue = (rgb.green - rgb.blue) / d + (rgb.green < rgb.blue ? 6 : 0);\n        break;\n      case rgb.green:\n        hue = (rgb.blue - rgb.red) / d + 2;\n        break;\n      case rgb.blue:\n        hue = (rgb.red - rgb.green) / d + 4;\n        break;\n    }\n    if (hue) hue /= 6;\n  }\n\n  return { hue: hue || 0, saturation: sat, lightness: light };\n};\n","import { RGB, Hex, HSL } from \"./color.model\";\nimport { hexToHsl, hexToRgb, rgbToHex, hslToHex } from \"./convert\";\n\nexport const mixHex = (colorA: Hex, colorB: Hex, amount: number): string => {\n  const colorA_array = colorA.match(/\\w\\w/g);\n  const colorB_array = colorB.match(/\\w\\w/g);\n\n  if (colorA_array == null || colorB_array == null) return \"#000000\";\n\n  const [rA, gA, bA] = colorA_array.map((c) => parseInt(c, 16));\n  const [rB, gB, bB] = colorB_array.map((c) => parseInt(c, 16));\n\n  const rgb: RGB = {\n    red: 0,\n    green: 0,\n    blue: 0,\n  };\n\n  rgb.red = Math.round(rA + (rB - rA) * amount);\n  rgb.green = Math.round(gA + (gB - gA) * amount);\n  rgb.blue = Math.round(bA + (bB - bA) * amount);\n\n  return rgbToHex(rgb);\n};\nexport const mixRGB = (colorA: RGB, colorB: RGB, amount: number): RGB => {\n  return hexToRgb(mixHex(rgbToHex(colorA), rgbToHex(colorB), amount));\n};\n\nexport const mixHSL = (colorA: HSL, colorB: HSL, amount: number): HSL => {\n  return hexToHsl(mixHex(hslToHex(colorA), hslToHex(colorB), amount));\n};\n"],"mappings":"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","names":["mkdir","readFile","access","writeFile","existsSync"]}